#!/usr/bin/env node

var MultiCouch = require('../lib/multicouch'),
    cmdline = require('commander');

var opts = cmdline
    .usage('[options] [<prefix>]')
    .option('-p, --port [number]', 'bind server to port', parseInt)
    .option('-d, --db_dir [path]', 'database directory')
    .option('-c, --couchdb_path [path]', 'executable path')
.parse(process.argv);

if (opts.args.length) {
  opts.prefix = opts.args[0];
}

var couch_process = new MultiCouch(opts);

couch_process.start();

// HACK: keep process alive until a quit-ly signal is received
setInterval(function () {}, 60000);

function quit() {
  couch_process.on('stop', function () {
    process.exit(0);
  });
  couch_process.stop();
}

// HT: node-supervisor
['SIGTERM', 'SIGINT', 'SIGHUP', 'SIGQUIT'].forEach(function (s) {
  process.on(s, quit);
});

